<?xml version="1.0"?>
<launch>
   <node name="wheel_vel" pkg="coppelia_ros_pioneer" type="wheel_velocity.py" respawn="true" output="screen" />
   
   <node name="odom" pkg="coppelia_ros_pioneer" type="odometry.py" respawn="true" output="screen" />
   
   <!-- TF -->
   <arg name="model" default="$(find p3dx_description)/urdf/pioneer3dx.urdf"/>
   <arg name="gui" default="False" />
   <param name="robot_description" textfile="$(arg model)" />
   <param name="use_gui" value="$(arg gui)"/>
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

   <!-- Convert PointCloud (published by Hokuyo on CoppeliaSim) to PointCloud2 (used in SLAM)-->
   <node name="point_cloud_converter" pkg="point_cloud_converter" type="point_cloud_converter_node" respawn="true" output="screen">
      <remap from="points_in" to="points1" />
      <remap from="points2_out" to="points2" />
   </node>

   <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan" output="screen">
		<remap from="cloud_in" to="points2" />
      
		<param name="angle_min" value="-2.0944" />  <!-- -120*pi/180 -->
		<param name="angle_max" value="2.0944" />  <!-- 120*pi/180 -->
		<param name="angle_increment" value="0.0061" />  <!-- 2*pi/1024 -->
		<param name="time_increment" value="0.000018" />  <!-- (1/50)/81 -->
		<param name="scan_time" value="0.0333" />
		<param name="range_min" value="0" />
		<param name="range_max" value="6" />
		<param name="use_inf" value="true" />
		<param name="concurrency_level" value="1" />
	</node>
   
   <node name="ekf_odom_node" pkg="robot_localization" type="ekf_localization_node" output="screen" >
		<rosparam command="load" file="$(find coppelia_ros_pioneer)/params/odom_ekf.yaml" />
   </node>
</launch>
